valueOf —— 不太严格地讲，该方法返回的实例与它的参数具有相同的值。这样的静态
工厂方法实际上是类型转化方法。
of —— valueOf 的一种更为简洁的替代，在 EnumSet （见第32条）中使用并流行起
来。
getInstance —— 返回的实例是通过方法的参数来描述的，但是不能够说与参数具有同
样的值。对于 Singleton 来说，该方法没有参数，并返回唯一的实例。
newInstance —— 像 getInstance 一样，但 newInstance 能够确保返回的每个实例都与
所有其他实例不同。
getType —— 像 getInstance 一样，但是在工厂方法处于不同的类中的时候使用。Type
表示工厂方法所返回的对象类型。
newType —— 像 newInstance 一样，但是在工厂方法处于不同的类中的时候使用。Type
表示工厂方法所返回的对象类型。
第1条：考虑用静态工厂方法代替构造器

17
简而言之，静态工厂方法和公有构造器都各有用处，我们需要理解它们各自的长处。静态工
厂通常更加合适，因此切忌第一反应就是提供公有的构造器，而不先考虑静态工厂。